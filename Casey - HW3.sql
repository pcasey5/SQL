--Paul Casey

--QUESTION 0

CREATE SCHEMA LOST;

SELECT * INTO STU241DB.LOST.TOUR FROM STARTERDB.LOST.TOUR;
SELECT * INTO STU241DB.LOST.REGISTER FROM STARTERDB.LOST.REGISTER;
SELECT * INTO STU241DB.LOST.QUALIFY FROM STARTERDB.LOST.QUALIFY;
SELECT * INTO STU241DB.LOST.OUTING FROM STARTERDB.LOST.OUTING;
SELECT * INTO STU241DB.LOST.GUIDE FROM STARTERDB.LOST.GUIDE;
SELECT * INTO STU241DB.LOST.CLIENT FROM STARTERDB.LOST.CLIENT;


--QUESTION 1

SELECT G.G_EMPNUM AS Employee, G.G_FNAME AS 'First Name', G.G_LNAME AS 'Last Name'
FROM LOST.GUIDE G
LEFT JOIN LOST.OUTING O ON G.G_EMPNUM = O.G_EMPNUM AND O.OUT_STARTLOC = 'Eden Street'
WHERE O.G_EMPNUM IS NULL
ORDER BY G.G_LNAME, G.G_FNAME;

--QUESTION 2

SELECT T.TOUR_NAME AS Tour,
	   FORMAT(O.OUT_DATE, 'MM/dd/yyyy') AS Outing,
	   O.OUT_MAXCAPACITY AS Seats,
	   COUNT(DISTINCT(R.CLIENT_NUM)) AS SeatsUsed,
	   O.OUT_MAXCAPACITY - COUNT(DISTINCT(R.CLIENT_NUM)) AS EmptySeats,
	   FORMAT(AVG(R.REG_FEE), 'C') AS AvgRegFee,
	   FORMAT((O.OUT_MAXCAPACITY - COUNT(DISTINCT(R.CLIENT_NUM))) * AVG(R.REG_FEE), 'C') AS "Lost Revenue"
FROM LOST.OUTING O
JOIN LOST.TOUR T ON T.TOUR_ID = O.TOUR_ID
JOIN LOST.REGISTER R ON R.OUT_ID = O.OUT_ID
JOIN LOST.CLIENT C ON C.CLIENT_NUM = R.CLIENT_NUM
WHERE O.OUT_STARTLOC != O.OUT_ENDLOC
GROUP BY T.TOUR_NAME, O.OUT_DATE, O.OUT_MAXCAPACITY
ORDER BY (O.OUT_MAXCAPACITY - COUNT(DISTINCT(R.CLIENT_NUM))) * AVG(R.REG_FEE) DESC, Outing;

--QUESTION 3

SELECT T.TOUR_NAME AS Tour,
       CONCAT(G.G_FNAME, ' ', G.G_LNAME) AS Guide,
       FORMAT(O.OUT_DATE, 'yyyy-MM-dd') AS Out_Date,
       O.OUT_MAXCAPACITY AS Out_MaxCapacity,
       FORMAT(T.TOUR_FEE, 'C') AS Tour_Fee,
       FORMAT(AvgTour.AvgTourFee, 'C') AS Tour_AvgFee,
       FORMAT(T.TOUR_FEE - AvgTour.AvgTourFee, 'C') AS 'Difference'
FROM (SELECT T.TOUR_ID, T.TOUR_NAME, AVG(R.REG_FEE) AS AvgTourFee 
      FROM LOST.TOUR T
      JOIN LOST.OUTING O ON O.TOUR_ID = T.TOUR_ID
      JOIN LOST.REGISTER R ON R.OUT_ID = O.OUT_ID 
      GROUP BY T.TOUR_ID, T.TOUR_NAME) AS AvgTour
JOIN LOST.OUTING O ON AvgTour.TOUR_ID = O.TOUR_ID
JOIN LOST.TOUR T ON T.TOUR_ID = O.TOUR_ID
JOIN LOST.GUIDE G ON G.G_EMPNUM = O.G_EMPNUM
JOIN LOST.REGISTER R ON R.OUT_ID = O.OUT_ID
WHERE O.OUT_DATE BETWEEN '2023-10-10' AND '2023-10-25'
GROUP BY T.TOUR_NAME, G.G_FNAME, G.G_LNAME, O.OUT_DATE, O.OUT_MAXCAPACITY, T.TOUR_FEE, AvgTour.AvgTourFee
ORDER BY 'Difference' DESC, Out_Date, Out_MaxCapacity DESC;

--QUESTION 4

SELECT T.TOUR_ID AS Tour_ID, T.TOUR_NAME AS Tour_Name, COUNT(O.OUT_ID) AS 'Num Outing', COUNT(DISTINCT(G.G_EMPNUM)) AS 'Num Guides'
FROM LOST.TOUR T
JOIN LOST.OUTING O ON O.TOUR_ID = T.TOUR_ID
JOIN LOST.GUIDE G ON G.G_EMPNUM = O.G_EMPNUM
WHERE O.OUT_DATE < '2023-10-01'
GROUP BY T.TOUR_ID, T.TOUR_NAME
ORDER BY COUNT(O.OUT_ID), COUNT(DISTINCT(G.G_EMPNUM));

--QUESTION 5

SELECT O.OUT_ID, T.TOUR_NAME AS TOUR_NAME, FORMAT(O.OUT_DATE, 'yyyy-MM-dd') AS OUT_DATE, CONCAT('Leaving: ', O.OUT_STARTLOC, ' and Arriving: ', O.OUT_ENDLOC) AS LOCATIONS
FROM LOST.OUTING O
JOIN LOST.TOUR T ON T.TOUR_ID = O.TOUR_ID
WHERE (O.OUT_STARTLOC = 'West Briar' OR O.OUT_ENDLOC = 'West Briar') AND O.OUT_DATE BETWEEN '2023-09-03' AND '2023-10-03'
ORDER BY OUT_DATE , TOUR_NAME;